name: Test, Build, and Push to Container Registry (Gradle)

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

env:
  PROJECT_ID: cuisinecraft   # Google Cloud project ID from GitHub Secrets
  GKE_CLUSTER: cuisinecraft-cluster       # GKE cluster name
  GKE_ZONE: europe-west4-a                # GKE cluster zone
  IMAGE_NAME: cuisine-craft-ingredient-service # Docker image name

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17  # Specify the Java version you use
          distribution: temurin  # Options: 'temurin', 'zulu', etc.

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Grant execute permission for Gradle wrapper
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      # Step 5: Build and Test with Gradle
      - name: Build and Test with Gradle
        run: ./gradlew clean build

      # Step 6: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}  # Replace with your Google Cloud project ID
          service_account_key: ${{ secrets.GCLOUD_KEY }}

      # Step 7: Get GKE Credentials using gcloud command
      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}

      # Step 8: Configure Docker for Container Registry
      - name: Configure Docker for Container Registry
        run: gcloud auth configure-docker

      # Step 9: Build the Docker image
      - name: Build Docker Image
        run: docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest .

      # Step 10: Push the Docker image to Container Registry
      - name: Push Docker Image
        run: docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
